// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;

namespace Azure.IoT.DeviceUpdate
{
    public partial class Counters
    {
        internal static Counters DeserializeCounters(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            UsageQuotaCounter deviceCount = default;
            UsageQuotaCounter deviceClassCount = default;
            UsageQuotaCounter deviceGroupCount = default;
            UsageQuotaCounter activeDeploymentCount = default;
            UsageQuotaCounter deploymentCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceCount"u8))
                {
                    deviceCount = UsageQuotaCounter.DeserializeUsageQuotaCounter(property.Value);
                    continue;
                }
                if (property.NameEquals("deviceClassCount"u8))
                {
                    deviceClassCount = UsageQuotaCounter.DeserializeUsageQuotaCounter(property.Value);
                    continue;
                }
                if (property.NameEquals("deviceGroupCount"u8))
                {
                    deviceGroupCount = UsageQuotaCounter.DeserializeUsageQuotaCounter(property.Value);
                    continue;
                }
                if (property.NameEquals("activeDeploymentCount"u8))
                {
                    activeDeploymentCount = UsageQuotaCounter.DeserializeUsageQuotaCounter(property.Value);
                    continue;
                }
                if (property.NameEquals("deploymentCount"u8))
                {
                    deploymentCount = UsageQuotaCounter.DeserializeUsageQuotaCounter(property.Value);
                    continue;
                }
            }
            return new Counters(deviceCount, deviceClassCount, deviceGroupCount, activeDeploymentCount, deploymentCount);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static Counters FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeCounters(document.RootElement);
        }
    }
}
