// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.IoT.DeviceUpdate
{
    public partial class DeviceClassSubgroupDeployment
    {
        internal static DeviceClassSubgroupDeployment DeserializeDeviceClassSubgroupDeployment(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string deploymentId = default;
            DateTimeOffset startDateTime = default;
            UpdateInfo update = default;
            string groupId = default;
            Optional<IReadOnlyList<string>> deviceClassSubgroups = default;
            Optional<bool> isCanceled = default;
            Optional<bool> isRetried = default;
            Optional<CloudInitiatedRollbackPolicy> rollbackPolicy = default;
            Optional<bool> isCloudInitiatedRollback = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deploymentId"u8))
                {
                    deploymentId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startDateTime"u8))
                {
                    startDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("update"u8))
                {
                    update = UpdateInfo.DeserializeUpdateInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("groupId"u8))
                {
                    groupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceClassSubgroups"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    deviceClassSubgroups = array;
                    continue;
                }
                if (property.NameEquals("isCanceled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isCanceled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isRetried"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isRetried = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("rollbackPolicy"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    rollbackPolicy = CloudInitiatedRollbackPolicy.DeserializeCloudInitiatedRollbackPolicy(property.Value);
                    continue;
                }
                if (property.NameEquals("isCloudInitiatedRollback"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isCloudInitiatedRollback = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DeviceClassSubgroupDeployment(deploymentId, startDateTime, update, groupId, Optional.ToList(deviceClassSubgroups), Optional.ToNullable(isCanceled), Optional.ToNullable(isRetried), rollbackPolicy.Value, Optional.ToNullable(isCloudInitiatedRollback));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static DeviceClassSubgroupDeployment FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeDeviceClassSubgroupDeployment(document.RootElement);
        }
    }
}
