// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.IoT.DeviceUpdate
{
    public partial class DeviceClassSubgroupDeploymentStatus
    {
        internal static DeviceClassSubgroupDeploymentStatus DeserializeDeviceClassSubgroupDeploymentStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string groupId = default;
            string deviceClassId = default;
            DeviceClassSubgroupDeploymentState deploymentState = default;
            Optional<ResponseError> error = default;
            Optional<int> totalDevices = default;
            Optional<int> devicesInProgressCount = default;
            Optional<int> devicesCompletedFailedCount = default;
            Optional<int> devicesCompletedSucceededCount = default;
            Optional<int> devicesCanceledCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("groupId"u8))
                {
                    groupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceClassId"u8))
                {
                    deviceClassId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deploymentState"u8))
                {
                    deploymentState = new DeviceClassSubgroupDeploymentState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    error = JsonSerializer.Deserialize<ResponseError>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("totalDevices"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalDevices = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("devicesInProgressCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    devicesInProgressCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("devicesCompletedFailedCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    devicesCompletedFailedCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("devicesCompletedSucceededCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    devicesCompletedSucceededCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("devicesCanceledCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    devicesCanceledCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new DeviceClassSubgroupDeploymentStatus(groupId, deviceClassId, deploymentState, error.Value, Optional.ToNullable(totalDevices), Optional.ToNullable(devicesInProgressCount), Optional.ToNullable(devicesCompletedFailedCount), Optional.ToNullable(devicesCompletedSucceededCount), Optional.ToNullable(devicesCanceledCount));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static DeviceClassSubgroupDeploymentStatus FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeDeviceClassSubgroupDeploymentStatus(document.RootElement);
        }
    }
}
