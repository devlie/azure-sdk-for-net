// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.IoT.DeviceUpdate
{
    public partial class Group
    {
        internal static Group DeserializeGroup(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string groupId = default;
            GroupType groupType = default;
            string createdDateTime = default;
            Optional<int> deviceCount = default;
            Optional<int> subgroupsWithNewUpdatesAvailableCount = default;
            Optional<int> subgroupsWithUpdatesInProgressCount = default;
            Optional<int> subgroupsWithOnLatestUpdateCount = default;
            Optional<IReadOnlyList<string>> deployments = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("groupId"u8))
                {
                    groupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("groupType"u8))
                {
                    groupType = new GroupType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("createdDateTime"u8))
                {
                    createdDateTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    deviceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("subgroupsWithNewUpdatesAvailableCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subgroupsWithNewUpdatesAvailableCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("subgroupsWithUpdatesInProgressCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subgroupsWithUpdatesInProgressCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("subgroupsWithOnLatestUpdateCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subgroupsWithOnLatestUpdateCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("deployments"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    deployments = array;
                    continue;
                }
            }
            return new Group(groupId, groupType, createdDateTime, Optional.ToNullable(deviceCount), Optional.ToNullable(subgroupsWithNewUpdatesAvailableCount), Optional.ToNullable(subgroupsWithUpdatesInProgressCount), Optional.ToNullable(subgroupsWithOnLatestUpdateCount), Optional.ToList(deployments));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static Group FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeGroup(document.RootElement);
        }
    }
}
