// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.IoT.DeviceUpdate;
using NUnit.Framework;

namespace Azure.IoT.DeviceUpdate.Samples
{
    public partial class Samples_InstanceManagementClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLimits_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response response = client.GetLimits(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("quota").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLimits_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response response = await client.GetLimitsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("quota").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLimits_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response<Limits> response = client.GetLimits();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLimits_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response<Limits> response = await client.GetLimitsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLimits_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response response = client.GetLimits(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("quota").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLimits_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response response = await client.GetLimitsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceClassCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deviceGroupCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("activeDeploymentCount").GetProperty("quota").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("usage").ToString());
            Console.WriteLine(result.GetProperty("counters").GetProperty("deploymentCount").GetProperty("quota").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLimits_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response<Limits> response = client.GetLimits();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLimits_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            InstanceManagementClient client = new InstanceManagementClient(endpoint, "<instanceId>", credential);

            Response<Limits> response = await client.GetLimitsAsync();
        }
    }
}
